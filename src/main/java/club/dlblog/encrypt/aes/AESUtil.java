package club.dlblog.encrypt.aes;import com.sun.org.apache.xerces.internal.impl.dv.util.HexBin;import javax.crypto.Cipher;import javax.crypto.KeyGenerator;import javax.crypto.SecretKey;import javax.crypto.spec.SecretKeySpec;import java.security.Key;import java.security.NoSuchAlgorithmException;import java.security.SecureRandom;/** * AES对称密钥加解密 */public class AESUtil {    /**     * 生成AES密钥     * @return     * @throws NoSuchAlgorithmException     */    public static String generateKey() throws NoSuchAlgorithmException {        KeyGenerator keyGenerator = KeyGenerator.getInstance("RSA");        //初始化生成器        keyGenerator.init(1024, new SecureRandom());        //生成AES密钥        SecretKey secretKey = keyGenerator.generateKey();        byte[] keyByte = secretKey.getEncoded();        return HexBin.encode(keyByte);    }    /**     * 生成AES密钥     * @param keySize 密钥最大长度     * @return     * @throws NoSuchAlgorithmException     */    public static String generateKey(Integer keySize) throws NoSuchAlgorithmException {        KeyGenerator keyGenerator = KeyGenerator.getInstance("RSA");        //初始化生成器        keyGenerator.init(keySize, new SecureRandom());        //生成AES密钥        SecretKey secretKey = keyGenerator.generateKey();        byte[] keyByte = secretKey.getEncoded();        return HexBin.encode(keyByte);    }    /**     * AES加密     * @param str     * @param secreKey     * @return     * @throws Exception     */    public static String encrypt( String str, String secreKey ) throws Exception{        //密钥        Key key  = new SecretKeySpec(HexBin.decode(secreKey),"AES");        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");        //初始化加密        cipher.init(Cipher.ENCRYPT_MODE, key);        byte[] result = cipher.doFinal(str.getBytes());       return HexBin.encode(result);    }    /**     * AES解密     * @param str     * @param secreKey     * @return     * @throws Exception     */    public static String decrypt(String str,String secreKey)  throws Exception{        Key key  = new SecretKeySpec(HexBin.decode(secreKey),"AES");        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");        //初始化解密        cipher.init(Cipher.DECRYPT_MODE, key);        byte[] result = cipher.doFinal(str.getBytes());        return new String(result);    }}