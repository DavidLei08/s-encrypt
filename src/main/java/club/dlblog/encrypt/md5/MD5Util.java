package club.dlblog.encrypt.md5;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;public class MD5Util {    //默认盐    public static String LOCAL_SALT = "23543dfggeelysdafaqj23ou89ZXcj@#$@#$#@KJdjklj;D../dSF.,";    //md5加密类    private static MessageDigest md5;    static {        try {            //获取md5实例            md5 = MessageDigest.getInstance("MD5");        } catch (NoSuchAlgorithmException e) {            e.printStackTrace();        }    }    /**     * MD5加密     * @param data     * @return     */    public static String encrypt(String data){        //md5加密        return byteArrayToHexString(md5.digest(data.getBytes()));    }    /**     * MD5加盐加密     * @param data     * @param salt     * @return     */    public static String encrypt(String data,String salt){        //加盐        data +=salt;        //md5加密        return byteArrayToHexString(md5.digest(data.getBytes()));    }    //这里主要是遍历8个byte，转化为16位进制的字符，即0-F    private static String byteArrayToHexString(byte[] b) {        StringBuffer resultSb = new StringBuffer();        for (int i = 0; i < b.length; i++) {            resultSb.append(byteToHexString(b[i]));        }        return resultSb.toString();    }    //这里是针对单个byte，256的byte通过16拆分为d1和d2    private static String byteToHexString(byte b) {        int n = b;        if(n < 0) {            n += 256;        }        int d1 = n / 16;        int d2 = n % 16;        return hexDigits[d1] + hexDigits[d2];    }    private static final String hexDigits[] = {"0", "1", "2", "3", "4", "5",            "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"};}